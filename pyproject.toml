[project]
authors = [
    {name = "arenekosreal", email = "17194552+arenekosreal@users.noreply.github.com"},
]
requires-python = "<3.14,>=3.12"
dependencies = [
    "aiohttp<4.0.0,>=3.9.3",
    "watchfiles>=0.24.0",
    "pydantic>=2.9.2",
    "typer>=0.16.0",
    "pydantic-xml>=2.17.1",
    "aiofiles>=24.1.0",
]
name = "crx-repo"
description = "Download Chrom(e|ium) extensions from Chrome Web Store and serve a update manifest."
readme = "README.md"
dynamic = ["version"]

[project.scripts]
crx-repo = "crx_repo:main"

[project.optional-dependencies]
uvloop = [
    "uvloop>=0.20.0",
]
lxml = [
    "lxml>=5.4.0",
]
all = [
    "uvloop",
    "lxml",
]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[dependency-groups]
dev = [
    "pytest-aiohttp<2.0.0,>=1.0.5",
    "pytest-cov>=6.0.0",
    "pytest-ruff<1.0.0,>=0.3.1",
]

[tool.uv]
required-version = ">=0.7.13"

[tool.setuptools.dynamic]
version.attr = "crx_repo.__version__"

[tool.basedpyright]
venvPath="."
venv=".venv"
reportMissingImports = true
pythonPlatform = "All"
typeCheckingMode = "all"
useLibraryCodeForTypes = true
# diagnostic rules
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
reportMissingTypeStubs = "warning"
reportImportCycles = true
reportUninitializedInstanceVariable = "warning"
reportCallInDefaultInitializer = "warning"
reportImplicitStringConcatenation = true
reportUnusedCallResult = "information"
reportUnnecessaryTypeIgnoreComment = "information"
reportImplicitOverride = "information"
reportShadowedImports = "information"

[tool.pytest.ini_options]
addopts = "--cov=crx_repo --ruff"
required_plugins = "pytest-ruff pytest-cov pytest-aiohttp"

[tool.ruff]
builtins = ["_"]
line-length = 100
extend-exclude = ["__pycache__"]
output-format = "grouped"
required-version = ">=0.6.2"

[tool.ruff.lint]
select = ["ALL"]

[tool.ruff.lint.per-file-ignores]
# tests are usually using assert and private objects
# pyright is not happy when using i.attr
# test __eq__ function should not be changed to ==
# Needs to group tests with method.
# No need __init__.py
"tests/**.py" = ["S101", "PLR6301", "INP001"]
# async generator is required by aiohttp
"src/crx_repo/__init__.py" = ["RUF029"]
# async generator is required by aiohttp
"src/crx_repo/server.py" = ["RUF029"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
mypy-init-return = true
suppress-dummy-args = true
suppress-none-returning = true

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
force-single-line = true
length-sort = true
lines-after-imports = 2
no-sections = true

[tool.ruff.lint.pycodestyle]
max-doc-length = 100
max-line-length = 100

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
docstring-code-format = true
